# 멀쩡한 사각형
"""
가로 길이가 Wcm, 세로 길이가 Hcm인 직사각형 종이가 있습니다. 
종이에는 가로, 세로 방향과 평행하게 격자 형태로 선이 그어져 있으며, 모든 격자칸은 1cm x 1cm 크기입니다. 이 종이를 격자 선을 따라 1cm × 1cm의 정사각형으로 잘라 사용할 예정이었는데,
누군가가 이 종이를 대각선 꼭지점 2개를 잇는 방향으로 잘라 놓았습니다. 그러므로 현재 직사각형 종이는 크기가 같은 직각삼각형 2개로 나누어진 상태입니다. 새로운 종이를 구할 수 없는 상태이기 때문에,
이 종이에서 원래 종이의 가로, 세로 방향과 평행하게 1cm × 1cm로 잘라 사용할 수 있는 만큼만 사용하기로 하였습니다.
가로의 길이 W와 세로의 길이 H가 주어질 때, 사용할 수 있는 정사각형의 개수를 구하는 solution 함수를 완성해 주세요.


x,y
(x,0)
(0,y)
x/2 y/2

테스트케이스
8,12,80 16

4,6
2,3
1, 1.5

12 8 80
2 2 2
1 10000 0
7 3 12
8 3 14
3 7 12
100000000 999999999 99999998800000002
5 3 8


규칙을 찾아보자
1 1 1
1 2 2

2 1 2 0
2 2 2 2
2 3 4 2
2 4 4 4
2 5 6 4
2 6 6 6

3 1 3 0
3 2 4 2
3 3 3 6
3 4 6 6 
3 5 7 
3 6 

6,4라면 
6,4 0,4 6,8 / 3 4
중심이 정수라면

계속보다가 정말 모르겠어서 다른 사람들의 풀이를 봤다
나는 결과에서 규칙을 찾으려고 했는데

가로, 세로에서 규칙을 찾으면 쉽게 풀 수 있는 문제였다

최대공약수레 대해 보면서 유클리드 호제법을 알게 되었다
유클리드 호제법은 

1112, 695가 있다면
1112/695 = 417
695/417=278
417/278=139
278/149=0

0이 나올 때까지 반복
"""
def gcd(a,b): #최대공약수를 구하는 함수
    if a<b: #1112 695
        max_int=b
        min_int=a
    else:
        max_int=a #695
        min_int=b #1112
    
    while min_int:
        tmp=max_int%min_int
        max_int=min_int
        min_int=tmp
    return max_int

#반복되는 것이 가로/gcd-1 , 세로/gcd 반복되고 gcd번 반복

def solution(w,h):
    return w*h-(w+h-gcd(w,h))

print(solution(8, 12))